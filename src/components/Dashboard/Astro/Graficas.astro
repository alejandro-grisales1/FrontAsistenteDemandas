
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Ejemplo Dashboard</title>
  <!-- <script src="https://d3js.org/d3.v7.min.js"></script> -->
</head>
<body> 
  <section class="flex">
    <div class="bg-neutral-200 chart-container-1">
      <script >
        import * as d3 from "d3";
  
        const width = 500;
        const height = 300;
        const margin = { top: 20, right: 30, bottom: 40, left: 40 };
  
        // Datos del gráfico de barras
        const data = [
          { label: "A", value: 30 },
          { label: "B", value: 80 },
          { label: "C", value: 45 },
          { label: "D", value: 60 },
          { label: "E", value: 20 },
          { label: "F", value: 90 },
          { label: "G", value: 55 },
        ];
  
        // Crear las escalas
        const x = d3
          .scaleBand()
          .domain(data.map((d) => d.label)) // Etiquetas en el eje X
          .range([margin.left, width - margin.right])
          .padding(0.1);
  
        const y = d3
          .scaleLinear()
          .domain([0, d3.max(data, (d) => d.value)]) // Valores en el eje Y
          .range([height - margin.bottom, margin.top]);
  
        // Crear el contenedor SVG
        const svg = d3
          .select(".chart-container-1")
          .append("svg")
          .attr("width", width)
          .attr("height", height);
  
        // Crear las barras
        svg
          .selectAll("rect")
          .data(data)
          .join("rect")
          .attr("x", (d) => x(d.label))
          .attr("y", (d) => y(d.value))
          .attr("height", (d) => y(0) - y(d.value))
          .attr("width", x.bandwidth())
          .attr("fill", "steelblue");
  
        // Agregar el eje X
        svg
          .append("g")
          .attr("transform", `translate(0,${height - margin.bottom})`)
          .call(d3.axisBottom(x));
  
        // Agregar el eje Y
        svg
          .append("g")
          .attr("transform", `translate(${margin.left},0)`)
          .call(d3.axisLeft(y));
      </script>
    </div>
    <div class="bg-neutral-200 chart-container-2">
      <script defer>
        import * as d3 from "d3";
  
        const width = 500;
        const height = 300;
        const margin = { top: 20, right: 30, bottom: 40, left: 40 };
  
        // Datos del gráfico de barras
        const data = [
          { label: "A", value: 30 },
          { label: "B", value: 80 },
          { label: "C", value: 45 },
          { label: "D", value: 60 },
          { label: "E", value: 20 },
          { label: "F", value: 90 },
          { label: "G", value: 55 },
        ];
  
        // Crear las escalas
        const x = d3
          .scaleBand()
          .domain(data.map((d) => d.label)) // Etiquetas en el eje X
          .range([margin.left, width - margin.right])
          .padding(0.1);
  
        const y = d3
          .scaleLinear()
          .domain([0, d3.max(data, (d) => d.value)]) // Valores en el eje Y
          .range([height - margin.bottom, margin.top]);
  
        // Crear el contenedor SVG
        const svg = d3
          .select(".chart-container-2")
          .append("svg")
          .attr("width", width)
          .attr("height", height);
  
        // Crear las barras
        svg
          .selectAll("rect")
          .data(data)
          .join("rect")
          .attr("x", (d) => x(d.label))
          .attr("y", (d) => y(d.value))
          .attr("height", (d) => y(0) - y(d.value))
          .attr("width", x.bandwidth())
          .attr("fill", "steelblue");
  
        // Agregar el eje X
        svg
          .append("g")
          .attr("transform", `translate(0,${height - margin.bottom})`)
          .call(d3.axisBottom(x));
  
        // Agregar el eje Y
        svg
          .append("g")
          .attr("transform", `translate(${margin.left},0)`)
          .call(d3.axisLeft(y));
      </script>
    <div class="bg-neutral-400 chart-container-3">
      <script>
        import * as d3 from "d3";
  
        const width = 500;
        const height = 300;
        const margin = { top: 20, right: 30, bottom: 40, left: 40 };
  
        // Datos del gráfico de barras
        const data = [
          { label: "A", value: 30 },
          { label: "B", value: 80 },
          { label: "C", value: 45 },
          { label: "D", value: 60 },
          { label: "E", value: 20 },
          { label: "F", value: 90 },
          { label: "G", value: 55 },
        ];
  
        // Crear las escalas
        const x = d3
          .scaleBand()
          .domain(data.map((d) => d.label)) // Etiquetas en el eje X
          .range([margin.left, width - margin.right])
          .padding(0.1);
  
        const y = d3
          .scaleLinear()
          .domain([0, d3.max(data, (d) => d.value)]) // Valores en el eje Y
          .range([height - margin.bottom, margin.top]);
  
        // Crear el contenedor SVG
        const svg = d3
          .select(".chart-container-3")
          .append("svg")
          .attr("width", width)
          .attr("height", height);
  
        // Crear las barras
        svg
          .selectAll("rect")
          .data(data)
          .join("rect")
          .attr("x", (d) => x(d.label))
          .attr("y", (d) => y(d.value))
          .attr("height", (d) => y(0) - y(d.value))
          .attr("width", x.bandwidth())
          .attr("fill", "steelblue");
  
        // Agregar el eje X
        svg
          .append("g")
          .attr("transform", `translate(0,${height - margin.bottom})`)
          .call(d3.axisBottom(x));
  
        // Agregar el eje Y
        svg
          .append("g")
          .attr("transform", `translate(${margin.left},0)`)
          .call(d3.axisLeft(y));
      </script>
    </div>
  </section>   
  <iframe src="maps/mapa_pereira.html" class="flex-1 max-w-full"></iframe>
</body>
</html>
